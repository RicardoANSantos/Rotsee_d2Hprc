# ==============================================================================
# Monte Carlo Simulation for δ2H Precipitation Reconstruction
# ==============================================================================
# Purpose:
# This script reconstructs δ2H precipitation (δ2Hprc) from plant wax δ2H (n-C29 alkane) using vegetation-corrected fractionation (n-alkane relative abudances, R.A index) for the Rotsee sediment core, as described in Santos et al. (2025, in submission).
# It performs Monte Carlo simulations, computes confidence intervals, adds LOESS smoothing, and generates plots.
#
# Data Requirements:
# - Excel file with columns:
#   - Age_BP_ka: Calibrated ages (ka BP).
#   - d2H_C29: Plant wax δ2H values.
#   - R.A_f_GR: Fraction of grasses (0-1). # Here we use R.A-based approach, but you might consider adjust the f_GR approch, ex: pollen-based f_GR
#   - f_GR values must be between 0 and 1; script validates this.
#
# Caveats and Assumptions:
# - Assumes normal distributions for fractionation uncertainties; replace rnorm if non-normal.
# - Fractionation values (epsilon/sigma) are site-specific (Central Europe); validate for other locations.
# - Skips rows with NA in required columns; reports count.
# - LOESS span=0.2 is default; adjust for different resolutions.
# - Outputs overwrite-check with warnings; use backups.
# - For details on methods, fractionation references, and validation, see the accompanying manuscript (under review; contact [your email] for preprint).
#
# Parameter Sources:
# - epsilon_C29_WP/sigma_C29_WP, epsilon_C29_GR/sigma_C29_GR: Mean/uncertainty for woody plants and grasses; see Santos et al. (2025) and references therein.
#
# Usage:
# 1. Place input file in working directory or update input_file.
# 2. Adjust f_GR variable/sheet if using different estimator.
# 3. Run the script; outputs CSV/XLSX files and PNG/PDF plot.
#
# Dependencies: Install via install.packages(c("ggplot2", "readxl", "writexl", "dplyr", "tidyr"))
# ==============================================================================

# Load required libraries
library(ggplot2)
library(readxl)
library(writexl)
library(dplyr)
library(tidyr)

# ---- User-Configurable Input ----
input_file <- "ROT21_Inputs_MonteCarlo_simulation_d2Hprc.xlsx"  # Replace if needed

# ---- Check File Existence ----
if (!file.exists(input_file)) {
  stop("Input file not found: ", input_file)
}

# ---- Load Data ----
data <- read_excel(input_file)

# ---- Verify Required Columns ----
required_cols <- c("Age_BP_ka", "d2H_C29", "R.A_f_GR")
if (!all(required_cols %in% colnames(data))) {
  stop("Missing required columns in input data: ", paste(required_cols, collapse = ", "))
}

# ---- Validate f_GR Values ----
if (any(data$R.A_f_GR < 0 | data$R.A_f_GR > 1, na.rm = TRUE)) {
  stop("R.A_f_GR values must be between 0 and 1")
}

# ---- Parameters ----
epsilon_C29_WP <- -110  # Mean εapp for C29 in Woody Plants (‰)
sigma_C29_WP <- 21      # Uncertainty for C29 in Woody Plants (‰)
epsilon_C29_GR <- -165  # Mean εapp for C29 in Grasses (‰)
sigma_C29_GR <- 25      # Uncertainty for C29 in Grasses (‰)
n_simulations <- 10000

# ---- Monte Carlo Simulation ----
set.seed(12345)  # For reproducibility

simulations_list <- list()
skipped_rows <- 0

for (i in 1:nrow(data)) {
  age <- data$Age_BP_ka[i]
  d2H_C29 <- data$d2H_C29[i]
  f_grasses_RA <- data$R.A_f_GR[i]
  
  if (any(is.na(c(d2H_C29, f_grasses_RA)))) {
    skipped_rows <- skipped_rows + 1
    message("Skipping row ", i, " due to NA values")
    next
  }
  
  epsilon_C29_WP_samples <- rnorm(n_simulations, mean = epsilon_C29_WP, sd = sigma_C29_WP)
  epsilon_C29_GR_samples <- rnorm(n_simulations, mean = epsilon_C29_GR, sd = sigma_C29_GR)
  
  epsilon_mix_RA <- (f_grasses_RA * epsilon_C29_GR_samples) + ((1 - f_grasses_RA) * epsilon_C29_WP_samples)
  
  d2H_prec_RA_sim <- ((d2H_C29 + 1000) / ((epsilon_mix_RA / 1000) + 1)) - 1000
  
  simulations_df <- data.frame(
    Age = rep(age, n_simulations),
    vegetation_correction_RA = epsilon_mix_RA,
    d2H_prec_RA = d2H_prec_RA_sim
  )
  
  simulations_list[[i]] <- simulations_df
}

if (skipped_rows > 0) {
  message("Total rows skipped due to NA values: ", skipped_rows)
}

# ---- Combine and Export Raw Results ----
final_results <- do.call(rbind, simulations_list)

output_sim <- "d2H_precipitation_simulations.csv"
if (file.exists(output_sim)) {
  warning("Output file already exists: ", output_sim, ". Skipping write.")
} else {
  write.csv(final_results, output_sim, row.names = FALSE)
}

# ---- Compute Confidence Intervals ----
results_ci <- final_results %>%
  group_by(Age) %>%
  summarize(
    Mean_veg_corr_RA = mean(vegetation_correction_RA, na.rm = TRUE),
    CI_95_low_veg_RA = quantile(vegetation_correction_RA, 0.025, na.rm = TRUE),
    CI_95_high_veg_RA = quantile(vegetation_correction_RA, 0.975, na.rm = TRUE),
    Mean_RA = mean(d2H_prec_RA, na.rm = TRUE),
    CI_95_low_RA = quantile(d2H_prec_RA, 0.025, na.rm = TRUE),
    CI_95_high_RA = quantile(d2H_prec_RA, 0.975, na.rm = TRUE),
    CI_68_low_RA = quantile(d2H_prec_RA, 0.16, na.rm = TRUE),
    CI_68_high_RA = quantile(d2H_prec_RA, 0.84, na.rm = TRUE)
  ) %>%
  ungroup()

# ---- Add LOESS Smoothing ----
loess_fit <- loess(Mean_RA ~ Age, data = results_ci, span = 0.2)
results_ci$LOESS_Mean_RA <- predict(loess_fit, newdata = data.frame(Age = results_ci$Age))

# ---- Export Summarized Results ----
output_ci <- "d2H_prec_reconstructions_with_CI.xlsx"
if (file.exists(output_ci)) {
  warning("Output file already exists: ", output_ci, ". Skipping write.")
} else {
  write_xlsx(results_ci, output_ci)
}

# ---- Generate Plot ----
p <- ggplot(results_ci, aes(x = Age)) +
  geom_ribbon(aes(ymin = CI_95_low_RA, ymax = CI_95_high_RA), fill = "grey80", alpha = 1) +
  geom_ribbon(aes(ymin = CI_68_low_RA, ymax = CI_68_high_RA), fill = "grey60", alpha = 1) +
  geom_point(aes(y = Mean_RA), size = 1.5, color = "black") +
  geom_line(aes(y = LOESS_Mean_RA), color = "red", linetype = "dashed", linewidth = 1) +
  labs(
    x = "Age (ka cal BP)",
    y = expression(delta^2*H[prc] ~ "(\u2030)"),
    title = expression("δ"^2*"H"[prc] ~ "Reconstruction (R.A-Based)"),
    caption = "Shaded: 68% CI (dark gray), 95% CI (light gray); Red dashed = LOESS (span = 0.2)"
  ) +
  theme_minimal(base_size = 14)

# ---- Display and Save Plot ----
print(p)
ggsave("d2H_precip_plot_with_CI_and_LOESS.png", plot = p, width = 10, height = 6, dpi = 300)
ggsave("d2H_precip_plot_with_CI_and_LOESS.pdf", plot = p, width = 10, height = 6)
